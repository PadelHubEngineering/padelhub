swagger: '2.0'
info:
  version: '1.0'
  title: "PadelHub API"
  description: API per gestire un sistema di prenotazioni di partite di padel.
host: padelhub-back.onrender.com
basePath: /api/v1
schemes:
- https
consumes:
- application/json
produces:
- application/json
paths:
  /authentication:
    x-summary: Autenticazione
    post: 
      summary: Fornisce l'autenticazione alla piattaforma
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/LoginRequest'
      responses:
        200:
          description: Dati inseriti validi, risposta valida
          schema:
            $ref: '#/definitions/LoginApproved'
        401:
          description: Dati inseriti non validi, errore
          schema:
            type: object
            properties:
              success: 
                type: boolean
              message:
                type: string
                
                
  /circolo/registrazioneCircolo:
    x-summary: Registrazione circolo
    post: 
      summary: Consente la registrazione alla piattaforma come circolo
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/RegistrazioneCircolo'
      responses:
        201:
          description: Dati inseriti validi, risposta valida
          schema:
            $ref: '#/definitions/RegistrazioneCircoloApproved'
        400:
          description: Dati inseriti non validi, errore
          schema:
            type: object
            properties:
              success: 
                type: boolean
              message:
                type: string
        500:
          description: Inserita email già esistente
          schema:
            $ref: '#/definitions/RegistrazioneCircoloEmailExist'
            
            
  /circolo/eliminaCircolo:
    x-summary: Eliminazione Circolo
    delete:
      summary: Consente di eliminare un circolo dalla piattaforma
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/EliminazioneCircolo'
      responses:
        200:
          description: Dati validi, eliminazione corretta
          schema:
            $ref: '#/definitions/EliminazioneCircoloApproved'
        401:
          description: Dati invalidi, errore
          schema:
            $ref: '#/definitions/EliminazioneCircoloImpossible'
            
            
  /datiCircolo:
    x-summary: Scarica dati Circolo
    get:
      summary: Fornisce tutti i dati relativi ad un Circolo
      responses:
        200:
          description: Il payload contiene tutti i dati relativi al circolo
          schema:
            allOf:
              - $ref: '#/definitions/RispostaBasic'
              - type: object
                properties:
                  payload:
                    type: object
        403:
          description: Azione fallita, il payload contiene il messaggio di errore
          schema:
            allOf:
              - $ref: '#/definitions/RispostaBasic'
              - type: object
                properties:
                  payload:
                    type: object
            
            
  /inserimentoDatiCircolo:
    x-summary: Inserimento dati Circolo
    post:
      summary: Consente l'inserimento dei dati di un Circolo
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/InserimentoDatiCircolo'
      responses:
        200:
          description: Dati validi, inserimento corretto
          schema:
            $ref: '#/definitions/InserimentoDatiCircoloOK'
        500:
          description: Dati invalidi, errore
          schema:
            $ref: '#/definitions/InserimentoDatiCircoloWrong'
            
            
  /circolo/prenotazioniSlot/{year}-{month}-{day}:
    x-summary: Richiesta lista prenotazioni Slot Circolo
    get: 
      summary: Fornisce prenotazioni giorno impostato
      parameters:
        - name: year
          in: path
          required: true
          type: integer
        - name: month
          in: path
          required: true
          type: integer
        - name: day
          in: path
          required: true
          type: integer
      responses:
        200:
          description: Fornisce un payload con le prenotazioni per il giorno passato come parametro
        404:
          description: Pagina non trovata, formato data errata o non specificata
          schema:
           $ref: '#/definitions/Errore'
        401:
          description: Il token fornito non è valido
          schema:
           $ref: '#/definitions/Errore'
        403:
          description: Non sei autorizzato ad accedere alla risorsa. Token non valido
          schema:
           $ref: '#/definitions/Errore'
           
           
  /circolo/prenotazioneSlot/:
    x-summary: Richiesta Prenotazione Slot Circolo
    post:
      summary: Endpoint circolo prenotazione slot
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/PrenotazioneCircolo'
      responses:
        201:
          description: Prenotazione creata con successo
        400:
          description: La data inserita non è corretta
          schema:
           $ref: '#/definitions/Errore'
        401:
          description: Impossibile scaricare i dati del circolo
          schema:
           $ref: '#/definitions/Errore'
        500:
          description: Campo non trovato o prenotazione già inserita dal circolo per lo slot
          schema:
           $ref: '#/definitions/Errore'
           
           
  /prenotazioneSlot/{id_prenotazione}:
    x-summary: Cancellazione Prenotazione Slot Circolo
    delete:
      summary: Endpoint di cancellazione slot circolo
      parameters:
        - name: id_prenotazione
          in: path
          type: string
          required: true
      responses:
        200:
          description: Prenotazione eliminata con successo
        401:
          description: Impossibile eliminare la prenotazione o impossibile trovare la prenotazione richiesta
          schema:
           $ref: '#/definitions/Errore'
           
           
  /partite/:
    x-summary: Inserimento nuova partita
    post:
      summary: Inserimento di una nuova partita da parte di un giocatore
      parameters:
        - name: body
          in: body
          required: true
          schema:
            title: Schema inserimento partita
            type: object
            properties:
              giocatori:
                type: array
                items:
                  type: string
              circolo: 
                type: string
              categoria_min:
                type: integer
              categoria_max:
                type: integer
              orario:
                type: string
      responses:
        200:
          description: Partita inserito correttamente
        500:
          description: Errore interno
          schema:
            $ref: '#/definitions/Errore'
    get:
      summary: Ottiene tutte le partite
      responses:
        200:
          description: Ritorna la lista di partite presenti a database
          schema:
            title: Schema Partite
            type: array
            items:
              $ref: '#/definitions/Partita'
        500:
          description: Errore Interno
          schema: 
            $ref: '#/definitions/Errore'
            

  /partite/{PartitaId}:
    x-summary: Ritrova partita specifica
    get:
      summary: Ritorna i dati della partita specificata nei parametri
      parameters:
        - name: PartitaId
          in: path
          required: true
          type: string
      responses:
        200:
          description: Ritorna i dati della partita specificata nei parametri
          schema:
            allOf:
              - $ref: '#/definitions/RispostaBasic'
              - type: object
                properties:
                  payload:
                    $ref: '#/definitions/Partita'
        500:
          description: Errore interno
          schema:
            $ref: '#/definitions/Errore'
        404:
          description: Partita inesistente
          schema:
            $ref: '#/definitions/Errore'
    delete:
      summary: Elimino la partita specificata
      parameters:
        - name: PartitaId
          in: path
          required: true
          type: string
      responses:
        201:
          description: Ritorna i dati della partita specificata nei parametri
          schema:
            allOf:
              - $ref: '#/definitions/RispostaBasic'
              - type: object
                properties:
                  payload:
                    $ref: '#/definitions/Partita'
        500:
          description: Errore interno
          schema:
            $ref: '#/definitions/Errore'
        404:
          description: Partita inesistente
          schema:
            $ref: '#/definitions/Errore'
    patch:
      summary: Update della partita specificata
      parameters:
        - name: PartitaId
          in: path
          required: true
          type: string
      responses:
        201:
          description: Ritorna i dati della partita specificata nei parametri
          schema:
            allOf:
              - $ref: '#/definitions/RispostaBasic'
              - type: object
                properties:
                  payload:
                    $ref: '#/definitions/Partita'
        401: 
          description: id partita invalido, partita al completo o giocatore non autorizzato ad iscriversi alla partita
          schema:
            $ref: '#/definitions/Errore'
        404:
          description: id partita invalido
          schema:
            $ref: '#/definitions/Errore'
            
  /giocatore/getSlot?idCircolo=idCircolo&data=data&campo=tipoCampo:
    x-summary: Scarica dati slot circoli
    get:
      summary: Fornisce l'occupazione degli slot orari dei vari circoli, evidenziando la presenza di eventuali partite aperte 
      parameters:
        - name: idCircolo 
          in: query
          type: string
          required: true
        - in: query
          name: data
          type: string
          required: true
        - in: query
          name: tipoCampo
          type: string
          enum: [Interno, Esterno]
          required: true
      responses:
        200:
          description: Ritorna i dati del circolo e quelli relativi ai vari slot temporali, in particolare di questi viene indicata la disponibilità e la presenza di partite aperte
          schema:
            allOf:
              - $ref: '#/definitions/RispostaBasic'
              - type: object
                properties:
                  payload:
                    type: object
        403:
          description: Ritorna il messaggio esplicativo di errore
          schema:
            allOf:
              - $ref: '#/definitions/RispostaBasic'
              - type: object
                properties:
                  payload:
                    type: object
  /ricercaCircoli/getCircoli:
    x-summary: Ritorna id e nome dei circoli
    get:
      summary: Ricerca
      responses:
        200:
          description: Ritorna id e nome dei circoli (api usata dalla ricerca per le suggestion)
          schema:
            allOf:
              - $ref: '#/definitions/RispostaBasic'
              - type: object
                properties:
                  payload:
                    type: object
  /ricercaCircoli/:
    x-summary: Ricerca dei circoli o per nome
    get:
      summary: Ricerca dei circoli più vicini o per nome
      responses:
        200:
          description: Ritorna i circoli ordinati per distanza richiamando le Bing API per la ricerca con autosuggestione. L'ordinamento avviene in base alla distanza di guida in chilometri
        400:
          description: query param 'data' non impostato o data non valida
  /pagamenti/webhook/:
    x-summary: Webhook per Stripe per ricevere gli eventi
    post:
      summary: Webhook per ricevere i dati da stripe. Questo webhook è utilizzato per ricevere gli eventi da Stripe, in particolare per quanto riguarda gli avvenuti pagamenti delle prenotazioni dai giocatori. Questa api permette infatti di prentare i giocatori alle partite solo dopo che questi hanno completato il pagamento.
      responses:
        200:
          description: Successo
  
          
definitions:
  LoginRequest:
    title: Login Request
    type: object
    properties:
      email:
        type: string
      password:
        type: string
    required:
      - email
      - password
    example:
      email: matteo@email.com
      password: password
  LoginApproved:
    title: Login Approved
    type: object
    properties:
      success:
        type: boolean
      message: 
        type: string
      token: 
        type: string
      dati:
        type: object
        properties:
          tipoAccount:
            type: string
          email:
            type: string
          nome:
            type: string
    example: 
      success: true
      message: Autenticazione completata con successo
      token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0aXBvQWNjb3VudCI6Ikdpb2NhdG9yZSIsImVtYWlsIjoibWF0dGVvQGVtYWlsLmNvbSIsIm5vbWUiOiJNYXR0ZW8iLCJpYXQiOjE2ODM2NTAwMTIsImV4cCI6MTY4MzgyMjgxMn0.rzU6tIfELQbQlRmoDWJj1i5VMurGIr0r8IMiz-0Yuo4
      dati:
        tipoAccount: Giocatore
        email: email@email.com
        nome: Matteo
  RegistrazioneCircolo:
    title: Registrazione Circolo
    type: object
    properties:
      nome:
        type: string
      email:
        type: string
      telefono:
        type: string
      password:
        type: string
    required:
      - nome
      - email
      - password
    example:
      nome: CircoloPadel
      email: circolo@padel.com
      telefono: 3315467332
      password: Circolo!123
  RegistrazioneCircoloApproved:
    title: Registrazione Circolo Approved
    type: object
    properties:
      success:
        type: boolean
      message:
        type: string
    example:
      success: true
      message: Email di conferma inviata
  RegistrazioneCircoloEmailExist:
    title: Registrazione Circolo Email Exist
    type: object
    properties:
      success:
        type: boolean
      message:
        type: string
    example:
      success: true
      message: Esiste gia` un utente con email uguale a "circolo@padel.com"
  EliminazioneCircolo: 
    title: Eliminazione Circolo
    type: object
    properties:
      email:
        type: string
    required:
      - email
    example:
      email: circolo@padel.com
  EliminazioneCircoloApproved:
    title: Eliminazione Circolo Approved
    type: object
    properties:
      success:
        type: boolean
      message:
        type: string
    example:
      success: true
      message: Circolo eliminato con successo
  EliminazioneCircoloImpossible:
    title: Eliminazione Circolo Impossible
    type: object
    properties:
      success:
        type: boolean
      message:
        type: string
    example:
      success: false
      message: Impossibile eliminare il circolo
  DatiCircoloOk: 
    title: Dati Circolo Ok
    type: object
    properties:
      success:
        type: boolean
      message:
        type: string
    example:
      success: true
  InserimentoDatiCircolo:
    title: Inserimento dati Circolo
    type: object
    properties:
      anagrafica:
        type: object
        properties:
          nome:
            type: string
          telefono:
            type: string
          partitaIVA:
            type: string
          indirizzo:
            type: string
      struttura: 
        type: object
        properties:
          orariStruttura:
            type: array
            items:
              type: object
              properties:
                giorno:
                  type: number
                isAperto: 
                  type: boolean
                orarioChiusura: 
                  type: string
                orarioApertura:
                  type: string
          durataSlot: 
            type: number
          quotaAffiliazione:
            type: number
          prezzoSlotOrario:
            type: number
          scontoAffiliazione: 
            type: number
          nCampiInterni: 
            type: number
          nCampiEsterni: 
            type: number
      servizio: 
        type: object
        properties:
          serviziAggiuntivi: 
            type: array
            items: 
              type: string
  
  InserimentoDatiCircoloOK:
    title: Inserimento dati Circolo corretto
    type: object
    properties:
      success:
        type: boolean
      message:
        type: string
    example:
      success: true
      message: Circolo aggiornato correttamente
      
  InserimentoDatiCircoloWrong:
    title: Inserimento dati Circolo errato
    type: object
    properties:
      success:
        type: boolean
      message:
        type: string
    example:
      success: true
      message: messaggio esplicativo dei dati errati
    
      
  PrenotazioneCircolo:
    title: Oggetto prenotazione slot circolo
    type: object
    properties:
      idCampo:
        type: integer
      dataOraPrenotazione:
        type: string
    required:
      - idCampo
      - dataOraPrenotazione
    example:
      idCampo: 1
      dataOraPrenotazione: "2015-03-25T12:00:00Z"
  Partita:
    title: Partita
    type: object
    properties:
      id_partita: 
        type: string
      isChiusa: 
        type: boolean
      categoria_max:
        type: integer
      categoria_min:
        type: integer
      giocatori:
        type: array
        items:
          type: string
      circolo:
        type: string
      orario:
        type: string
  Errore:
    type: object
    properties:
      HTTPCode:
        type: integer
        description: Il codice HTTP di errore.
      success:
        type: boolean
        description: Lo stato della risposta.
      message:
        type: string
        description: Messaggio di errore
    example: 
      HTTPCode: -9999
      success: false
      message: Messaggio esplicativo di errore
  RispostaBasic:
    type: object
    properties:
      HTTPCode:
        type: integer
        description: Il codice HTTP di errore.
      success:
        type: boolean
        description: Lo stato della risposta.